<div class="show-page-views-container">
  <% if query.count == 0 %>
    <h2><%= "Sorry, no results could be found for this query." %></h2>
  <% else %>
    <ul class="nav nav-tabs show-page-views-tabs-container" id="myTab" role="tablist">
      <li class="nav-item show-page-views-tab-container">
        <a class="nav-link active show-page-views-tab-link" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="show-page-views-tab-icon">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
          </svg>
          Table
      </a>
      </li>
      <li class="nav-item show-page-views-tab-container">
        <a class="nav-link show-page-views-tab-link" id="chart-tab" data-toggle="tab" href="#chart" role="tab" aria-controls="chart" aria-selected="false">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="show-page-views-tab-icon">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
          </svg>
          Charts
        </a>
      </li>
      <li class="nav-item show-page-views-tab-container">
        <a class="nav-link show-page-views-tab-link" id="map-tab" data-toggle="tab" href="#map-container" role="tab" aria-controls="map-container" aria-selected="false">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="show-page-views-tab-icon">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7" />
          </svg>
          Map
        </a>
      </li>
    </ul>

    <div class="tab-content show-page-views-tab-content-container" id="myTabContent">

      <div class="tab-pane show active show-page-views-tab-pane" id="home" role="tabpanel" aria-labelledby="home-tab">
        <div class="show-page-table-wrapper">
          <div class="show-page-table-container">
            <table class='show-page-table'>
              <thead class='show-page-table-header-section'>
                <tr class='show-page-table-row'>
                  <% query[0].keys.each do |k| %>
                    <th class='show-page-table-header'><%= k.gsub("_", " ").capitalize %></th>
                  <% end %>
                </tr>
              </thead>

              <tbody class='show-page-table-body-section'>
                <% query.each do |order| %>
                <tr class='show-page-table-row'>
                  <% order.keys.each do |k| %>
                    <td class='show-page-table-data-cell'><%= order[k] %></td>
                  <% end %>
                </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <div class="tab-pane show-page-views-tab-pane" id="chart" role="tabpanel" aria-labelledby="chart-tab" style="margin-top: 10px;">
        <ul class="nav nav-tabs show-page-views-tabs-container" id="myChartTab" role="tablist">
          <% no_charts = true %>
          <% if !@query || JSON.parse(@query.fields).include?('order_created_at') %>
            <% no_charts = false %>
            <li class="nav-item show-page-views-tab-container">
              <a class="nav-link active show-page-views-tab-link" id="line-chart-tab" data-toggle="tab" href="#line-chart" role="tab" aria-controls="line-chart" aria-selected="true">when my orders created ?</a>
            </li>
          <% end %>
          <% if !@query || JSON.parse(@query.fields).include?('lineitem_sku') %>
            <% no_charts = false %>
            <li class="nav-item show-page-views-tab-container">
              <a class="nav-link show-page-views-tab-link" id="line2-chart-tab" data-toggle="tab" href="#line2-chart" role="tab" aria-controls="line2-chart" aria-selected="false">product name by numbers</a>
            </li>
          <% end %>
          <% if !@query || JSON.parse(@query.fields).include?('vendor') && JSON.parse(@query.fields).include?('lineitem_quantity')  %>
            <% no_charts = false %>
            <li class="nav-item show-page-views-tab-container">
              <a class="nav-link show-page-views-tab-link" id="line3-chart-tab" data-toggle="tab" href="#line3-chart" role="tab" aria-controls="line3-chart" aria-selected="false">product quantity by vendors</a>
            </li>
          <% end %>
          <% if  !@query || JSON.parse(@query.fields).include?('paid_at') && JSON.parse(@query.fields).include?('lineitem_quantity')  %>
            <% no_charts = false %>
            <li class="nav-item show-page-views-tab-container">
              <a class="nav-link show-page-views-tab-link" id="pie-chart-tab" data-toggle="tab" href="#pie-chart" role="tab" aria-controls="pie-chart" aria-selected="false">Your sales according to payment date</a>
            </li>
          <% end %>
          <% if no_charts == true %>
            <p>We are not able to show any chart according to your query.</p>
          <% end %>
        </ul>

        <div class="tab-content show-page-views-tab-content-container" id="myChartTabContent">
          <% content_for :chartkick do %>
            <%= javascript_pack_tag 'chartkick' %>
          <% end %>

          <% if !@query || JSON.parse(@query.fields).include?('order_created_at') %>
        <div class="tab-pane active show show-page-views-tab-pane" id="line-chart" role="tabpanel" aria-labelledby="line-chart-tab">
            <h4>introduction</h4>
            <p>A line graph is commonly used to display change over time as a series of data points connected by straight
             line segments on two axes. The line graph therefore helps to determine the relationship between two sets of values, 
             with one data set always being dependent on the other set</p>
            <%= line_chart chart.group_by_day(:order_created_at).count, xtitle: "Time", ytitle: "Number of Order", colors: ["#b00", "#666"], stacked: true , discrete: true, legend: false%>
            <h2>Summary</h2>
            <p>The chart shows changes of your orders day by day.
             As it is seen on chart you total sales number has been increased since you started to business.</p>
            <br>
          </div> 
          <% end %>

          <% if !@query || JSON.parse(@query.fields).include?('lineitem_sku') %>
             <div class="tab-pane show-page-views-tab-pane" id="line2-chart" role="tabpanel" aria-labelledby="line2-chart-tab">
                <h4>introduction:</h4>
                <p>Pie charts are generally used to show percentage or proportional
                data and usually the percentage represented by each category is provided next to the corresponding slice of pie.</p>
                <%= pie_chart chart.group(:lineitem_sku).count %>
                <h2>Summary</h2>
                <p>The Column chart indicates that......</p> 
              </div>
          <% end %>
          
          <% if !@query || JSON.parse(@query.fields).include?('vendor') && JSON.parse(@query.fields).include?('lineitem_quantity') %>
          <div class="tab-pane show-page-views-tab-pane" id="line3-chart" role="tabpanel" aria-labelledby="line3-chart-tab">
            <h4 style="margin-top:5px;">introduction:</h4>
            <p>A bar chart is used when you want to show a distribution of data points or perform a comparison of metric values across different subgroups of your data. 
            From a bar chart, we can see which groups are highest or most common, and how other groups compare against the others</p>
            <%= bar_chart chart.group(:vendor).sum(:lineitem_quantity) %>
            <h2>Summary</h2>
            <p>The bar chart indicates that......</p>
          </div> 
          <% end %>

          <% if  !@query || JSON.parse(@query.fields).include?('paid_at') && JSON.parse(@query.fields).include?('lineitem_quantity')  %>
          <div class="tab-pane show-page-views-tab-pane" id="pie-chart" role="tabpanel" aria-labelledby="pie-chart-tab">

            <p>A scatter plot uses dots to represent values for two different numeric variables. The position of each dot on the horizontal and vertical 
            axis indicates values for an individual data point. Scatter plots are used to observe relationships between variables.</p>
            <%= scatter_chart chart.pluck(:paid_at, :lineitem_quantity), xtitle: "payment time", ytitle: "quantity of product" %>
            <h2>Summary</h2>
            <p>The Pie chart indicates that......</p>  
          </div> 
          <% end %>
        </div> 

      </div>
      <div class="tab-pane show-page-views-tab-pane" id="map-container" role="tabpanel" aria-labelledby="map-tab">
        <div id="query-json-data" class="display-none">
          <p><%= query.to_json %></p>
        </div>
        <div id="query-json-column-data-types" class="display-none">
          <p><%= @selected_columns ? @selected_columns.to_json : @order_columns.to_json %></p>
        </div>
        <!-- Don't touch this please, map projections are made for 960x500 aspect ratio -->

        <svg width="960" height="500" id="map"></svg>

      </div>
    </div>
  <% end %>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/3.0.2/topojson.min.js" integrity="sha512-4UKI/XKm3xrvJ6pZS5oTRvIQGIzZFoXR71rRBb1y2N+PbwAsKa5tPl2J6WvbEvwN3TxQCm8hMzsl/pO+82iRlg==" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/5.6.0/d3.min.js" integrity="sha512-Gdjw6rdB8Tefa1RazvbG8hecjW7qSjnmcRnPPj40lnNnsX5Ci9pijAciBieg9XcQIFm1w/PICAzzsE6POaDyiw==" crossorigin="anonymous"></script>

<script>


  const svg = d3.select('#map');

  const width = +svg.attr('width');
  const height = +svg.attr('height');

  const projection = d3.geoNaturalEarth1();
  const pathGenerator = d3.geoPath().projection(projection);

  const g = svg.append('g');

  svg.call(d3.zoom().on('zoom', () => {
    g.attr('transform', d3.event.transform);
  }));

  Promise.all([
    // d3.tsv('https://unpkg.com/world-atlas@1.1.4/world/50m.tsv'),
    JSON.parse(document.querySelector("#query-json-data").innerText), //this is json but is being referred to as tsvData here for now.
    d3.json('https://unpkg.com/world-atlas@1.1.4/world/50m.json')
  ]).then(([tsvData, topoJSONdata]) => {
    console.log(tsvData); //checking it has been parsed correctly
    const rowById = tsvData.reduce((accumulator, d) => {
      //accumulator[d.iso_n3] = d; // Alex's original code
      accumulator[d.billing_country] = d;
      return accumulator;
    }, {});

    const countryIsos = {826:"UK", 840:"US", 124:"Canada", 250:"France", 276:"Germany", 380:"Italy", 724:"Spain", 356:"India", 710:"South Africa", 36:"Australia"};
    // const countryName = {};
    // tsvData.forEach(d => {
    //   countryName[d.iso_n3] = d.name;
    // });

    const countries = topojson.feature(topoJSONdata, topoJSONdata.objects.countries);
    console.log(countries)
    countries.features.forEach(d => {
      // console.log(d.name);
      Object.assign(d.properties, rowById[countryIsos[d.id]]);
    });

    const colorScale = d3.scaleQuantile();

    // const colorValue = d => d.properties.economy;
    const colorValue = d => d.properties.subtotal;

    // Get rid of duplicate category entries
    // Sort category entry values
    colorScale
      .domain(countries.features.map(colorValue))
      // .domain(colorScale.domain().sort().reverse())
      // .range(d3.schemeSpectral[colorScale.domain().length]);
      .range(["#6EE7B7", "#10B981", "#16A34A", "#047857"]); //["#9CA3AF", "#D1D5DB", "#6B7280", "#4B5563"]);//, "#6B7280", "#4B5563", "#374151", "#1F2937", "#111827"]);

      // "#F9FAFB", "#F3F4F6" , "#E5E7EB" ,
    g.selectAll('path').data(countries.features)
      .enter().append('path')
        .attr('class', 'country')
        .attr('d', pathGenerator)
        .attr('fill', d => colorScale(colorValue(d)))
      .append('title')
        .text(d => d.properties.billing_country + ': ' + colorValue(d));
  });

</script>

